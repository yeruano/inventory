steps:
  - task: SonarQubePrepare@5
    displayName: 'Prepare analysis on SonarQube'
    inputs:
      SonarQube: SonarQube
      scannerMode: Other
      extraProperties: |
        sonar.projectKey=$(Build.Repository.Name)_$(Artifact.Name)
        sonar.projectName=$(Build.Repository.Name)_$(Artifact.Name)
        sonar.projectVersion=$(Build.BuildNumber)
        sonar.exclusions=**/deployment/**
        sonar.junit.reportPaths=$(Build.SourcesDirectory)/$(Artifact.Name)/applications/app-service/build/test-results/test
        sonar.coverage.jacoco.xmlReportPaths=$(System.DefaultWorkingDirectory)/$(Artifact.Name)/build/reports/jacocoMergedReport/jacocoMergedReport.xml

  - task: Gradle@3
    displayName: 'Gradle build and test'
    inputs:
      workingDirectory: '$(Artifact.Name)'
      gradleWrapperFile: '$(Artifact.Name)/gradlew'
      tasks: 'clean build jacocoMergedReport --stacktrace'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      testRunTitle: '$(Build.DefinitionName)'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'build'
    env:
      JAVA_HOME: $(JAVA_HOME_17_X64)

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFiles: '**/TEST-*.xml'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      summaryFileLocation: $(System.DefaultWorkingDirectory)/$(Artifact.Name)/build/reports/jacocoMergedReport/jacocoMergedReport.xml
      reportDirectory: $(System.DefaultWorkingDirectory)/$(Artifact.Name))/build/reports/jacocoMergedReport/html

  - task: Sonar-buildbreaker@8
    displayName: 'Quality Gate'
    inputs:
      SonarQube: SonarQube

  - script: |
      rm -r $(Build.SourcesDirectory)/$(Artifact.Name)/gradle-$(Gradle_version)
      rm -f $(Build.SourcesDirectory)/$(Artifact.Name)/gradle-$(Gradle_version)-bin.zip
    displayName: 'Delete Gradle Wrapper Folder'