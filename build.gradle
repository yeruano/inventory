buildscript {
	ext {
		cleanArchitectureVersion = '3.12.2'
		springBootVersion = '3.2.5'
        projectReactorVersion = '2023.0.1'
		sonarVersion = '4.4.1.3373'
		jacocoVersion = '0.8.10'
        lombokVersion = '1.18.30'
        javaJwtVersion = '4.4.0'
	}
}

plugins {
	id 'co.com.bancolombia.cleanArchitecture' version "${cleanArchitectureVersion}"
	id 'org.springframework.boot' version "${springBootVersion}" apply false
	id 'org.sonarqube' version "${sonarVersion}"
	id 'jacoco'
}

sonar {
    def modules = subprojects.projectDir.collect { "${it.toString().replace(project.projectDir.toString() + "/", "")}" }
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.modules", "${modules.join(',')}"
        property "sonar.sources", "src,deployment,settings.gradle,main.gradle,build.gradle,${modules.collect { "${it}/build.gradle" }.join(',')}"
        property "sonar.exclusions","**/MainApplication.java"
        property "sonar.test", "src/test"
        property "sonar.java.binaries", ""
        property "sonar.junit.reportsPath", ""
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacocoMergedReport/jacocoMergedReport.xml"
        property "sonar.externalIssuesReportPaths", "build/issues.json"
    }
}

cleanPlugin {
    modelProps {
        whitelistedDependencies = "reactor-bom, spring-boot-starter-actuator, spring-boot-starter-security, jjwt-api"
    }
}

apply from: './main.gradle'
